(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';(function(){var a=require('../package.json');window.ChatEngineCore.plugin[a.name]=require('../src/plugin.js')})();

},{"../package.json":2,"../src/plugin.js":3}],2:[function(require,module,exports){
module.exports={
  "name": "chat-engine-open-graph",
  "version": "0.0.1",
  "main": "src/plugin.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pubnub/chat-engine-open-graph.git"
  },
  "keywords": [
    "pubnub",
    "chat-engine",
    "open-graph",
    "realtime"
  ],
  "author": "Manuel Fernando",
  "bugs": {
    "url": "https://github.com/pubnub/chat-engine-open-graph/issues"
  },
  "homepage": "https://github.com/pubnub/chat-engine-open-graph#readme",
  "browserify": {
    "transform": [
      [
        "babelify",
        {
          "presets": [
            "es2015",
            "minify"
          ]
        }
      ]
    ]
  },
  "devDependencies": {
    "babel-core": "^6.26.3",
    "babel-minify": "^0.4.3",
    "babel-preset-es2015": "^6.24.1",
    "babelify": "^8.0.0"
  }
}

},{}],3:[function(require,module,exports){
'use strict';module.exports=function(a){var b=a.api,c=b===void 0?function(a){return'http://localhost:3001/?q='+a}:b,d=/(http|https)\:\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(\/\S*)?/;return{middleware:{on:{message:function f(a,b){var e=a.data.text.match(d);e&&0<e.length&&request(c(encodeURI(e[0])),'GET',{"Access-Control-Allow-Origin":'*'}).then(function(b){a.data.text=a.data.text.replace(d,''),a.data.metadata=b.body}).catch(function(){}),b(null,a)}}}}};function request(a,b,c){return new Promise(function(d,e){var f=new XMLHttpRequest,g=!1;for(var h in c=c||{},f.open(b,a),c.headers)({}).hasOwnProperty.call(c.headers,h)&&(h=h.toLowerCase(),g='content-type'===h||g,f.setRequestHeader(h,c.headers[h]));g||f.setRequestHeader('Content-type','application/x-www-form-urlencoded'),f.onload=function(){if(200<=f.status&&300>f.status){var a;try{a=JSON.parse(f.response)}catch(b){a=f.response}d(a)}else e({status:f.status,statusText:f.statusText})},f.send(JSON.stringify(c.body))})}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
